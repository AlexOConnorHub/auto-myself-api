components:
  schemas:
    models.MaintenanceRecordBase:
      properties:
        cost:
          type: string
        interval:
          type: string
        interval_type:
          type: string
        notes:
          type: string
        odometer:
          type: integer
        timestamp:
          type: string
        type:
          type: string
        vehicle_id:
          type: string
      type: object
    models.UserBase:
      properties:
        username:
          type: string
      type: object
    models.VehicleBase:
      properties:
        lpn:
          type: string
        make:
          type: string
        make_id:
          type: integer
        model:
          type: string
        model_id:
          type: integer
        nickname:
          type: string
        vin:
          type: string
        year:
          type: integer
      type: object
externalDocs:
  description: ""
  url: ""
info:
  contact:
    email: api@automyself.com
    name: AlexOConnorHub
    url: https://automyself.com
  description: This API is used to store and share vehicle maintenance history.
  license:
    name: CC BY-NC-SA 4.0
    url: https://creativecommons.org/licenses/by-nc-sa/4.0/
  termsOfService: https://github.com/AlexOConnorHub/auto-myself-api/blob/main/TERMS_OF_SERVICE.md
  title: Auto Myself API
  version: "1.0"
openapi: 3.1.0
paths:
  /maintenance:
    post:
      description: Create a new maintenance record for a vehicle.
      parameters:
        - description: User ID
          examples:
            user1:
              description: User has One personal vehicle and one shared vehicle
              summary: User 1
              value: 019785fe-4eb4-766e-9c45-bec7780972a2
            user2:
              description: User has vehicle shared FROM User 1 with write access
              summary: User 2
              value: 019785fe-4eb4-766e-9c45-c1f83e7c1f1f
            user3:
              description: User has vehicle shared FROM User 1 with read access
              summary: User 3
              value: 019785fe-4eb4-766e-9c45-c497f2d9fe9e
            user4:
              description: User has One personal vehicle
              summary: User 4
              value: 019785fe-4eb4-766e-9c45-c8578456b4df
            user5:
              description: User has no vehicles, no vehicles shared
              summary: User 5
              value: 019785fe-4eb4-766e-9c45-cec136a9ad6f
            user6:
              description: User has One vehicle to share
              summary: User 6
              value: 019785fe-4eb4-766e-9c45-f592a1187d0c
            user7:
              description:
                User has vehicle shared FROM User 1 and User 6, both with
                write access
              summary: User 7
              value: 019785fe-4eb4-766e-9c45-f9cd4ee5c0b3
            user8:
              description:
                User has One personal vehicle, vehicle shared FROM User 1
                (write) and User 6 (read)
              summary: User 8
              value: 019785fe-4eb4-766e-9c45-fc6ed4a7407b
          in: header
          name: auth_uuid
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            examples:
              maintenance_record1:
                description: Create a new maintenance record with notes "A Fresh Vehicle"
                summary: Create a maintenance record
                value: '{ "notes": "A Fresh Vehicle" }'
            schema:
              $ref: "#/components/schemas/models.MaintenanceRecordBase"
        description: New maintenance record
        required: true
      responses:
        "201":
          description: Created
        "422":
          description: Unprocessable Entity
      summary: "Create maintenance record TODO: ADD HEADER"
      tags:
        - Maintenance
  /maintenance/{uuid}:
    delete:
      description: Delete a maintenance record.
      parameters:
        - description: User ID
          examples:
            user1:
              description: User has One personal vehicle and one shared vehicle
              summary: User 1
              value: 019785fe-4eb4-766e-9c45-bec7780972a2
            user2:
              description: User has vehicle shared FROM User 1 with write access
              summary: User 2
              value: 019785fe-4eb4-766e-9c45-c1f83e7c1f1f
            user3:
              description: User has vehicle shared FROM User 1 with read access
              summary: User 3
              value: 019785fe-4eb4-766e-9c45-c497f2d9fe9e
            user4:
              description: User has One personal vehicle
              summary: User 4
              value: 019785fe-4eb4-766e-9c45-c8578456b4df
            user5:
              description: User has no vehicles, no vehicles shared
              summary: User 5
              value: 019785fe-4eb4-766e-9c45-cec136a9ad6f
            user6:
              description: User has One vehicle to share
              summary: User 6
              value: 019785fe-4eb4-766e-9c45-f592a1187d0c
            user7:
              description:
                User has vehicle shared FROM User 1 and User 6, both with
                write access
              summary: User 7
              value: 019785fe-4eb4-766e-9c45-f9cd4ee5c0b3
            user8:
              description:
                User has One personal vehicle, vehicle shared FROM User 1
                (write) and User 6 (read)
              summary: User 8
              value: 019785fe-4eb4-766e-9c45-fc6ed4a7407b
          in: header
          name: auth_uuid
          required: true
          schema:
            type: string
        - description: Vehicle UUID
          in: path
          name: uuid
          required: true
          schema:
            type: string
      responses:
        "204":
          description: No Content
        "403":
          description: Forbidden
        "404":
          description: Not Found
      summary: Delete maintenance record
      tags:
        - Maintenance
    get:
      description: Retrieves a maintenance record by its UUID
      parameters:
        - description: User ID
          examples:
            user1:
              description: User has One personal vehicle and one shared vehicle
              summary: User 1
              value: 019785fe-4eb4-766e-9c45-bec7780972a2
            user2:
              description: User has vehicle shared FROM User 1 with write access
              summary: User 2
              value: 019785fe-4eb4-766e-9c45-c1f83e7c1f1f
            user3:
              description: User has vehicle shared FROM User 1 with read access
              summary: User 3
              value: 019785fe-4eb4-766e-9c45-c497f2d9fe9e
            user4:
              description: User has One personal vehicle
              summary: User 4
              value: 019785fe-4eb4-766e-9c45-c8578456b4df
            user5:
              description: User has no vehicles, no vehicles shared
              summary: User 5
              value: 019785fe-4eb4-766e-9c45-cec136a9ad6f
            user6:
              description: User has One vehicle to share
              summary: User 6
              value: 019785fe-4eb4-766e-9c45-f592a1187d0c
            user7:
              description:
                User has vehicle shared FROM User 1 and User 6, both with
                write access
              summary: User 7
              value: 019785fe-4eb4-766e-9c45-f9cd4ee5c0b3
            user8:
              description:
                User has One personal vehicle, vehicle shared FROM User 1
                (write) and User 6 (read)
              summary: User 8
              value: 019785fe-4eb4-766e-9c45-fc6ed4a7407b
          in: header
          name: auth_uuid
          required: true
          schema:
            type: string
        - description: Maintenance Record UUID
          examples:
            maintenance1:
              description: Vehicle owned by User 1
              summary: Maintenance 1
              value: 01978640-1148-74f8-be64-59f2af568e59
            maintenance2:
              description: Vehicle shared by User 1 with User 2 and User 3
              summary: Maintenance 2
              value: 01978640-1148-74f8-be64-5e6b15475861
            maintenance3:
              description: Vehicle owned by User 4
              summary: Maintenance 3
              value: 01978640-1148-74f8-be64-600b58c80190
            maintenance4:
              description: Vehicle shared by User 6 with User 7
              summary: Maintenance 4
              value: 01978640-1148-74f8-be64-673c2bc659d3
            maintenance5:
              description: Vehicle owned by User 8
              summary: Maintenance 5
              value: 01978640-1148-74f8-be64-6b2a85c627a7
            maintenance6:
              description: Vehicle shared by User 1 with User 2 and User 3
              summary: Maintenance 6
              value: 01978640-1148-74f8-be64-6ce4acd8abcd
            maintenance7:
              description: Vehicle owned by User 4
              summary: Maintenance 7
              value: 01978640-1148-74f8-be64-70821e946a20
            maintenance8:
              description: Vehicle shared by User 6 with User
              summary: Maintenance 8
              value: 01978640-1148-74f8-be64-74b319513577
            maintenance9:
              description: Vehicle owned by User 8
              summary: Maintenance 9
              value: 01978640-1148-74f8-be64-7b8ece4dc40f
            maintenance10:
              description: Vehicle shared by User 1 with User 2 and User 3
              summary: Maintenance 10
              value: 01978640-1148-74f8-be64-7ea0e41d68d5
            maintenance11:
              description: Vehicle owned by User 4
              summary: Maintenance 11
              value: 01978640-1148-74f8-be64-bc7c09adc4c1
            maintenance12:
              description: Vehicle shared by User 6 with User 7
              summary: Maintenance 12
              value: 01978640-1148-74f8-be64-ac02bbbf11cf
            maintenance13:
              description: Vehicle owned by User 8
              summary: Maintenance 13
              value: 01978640-1148-74f8-be64-b446e827f938
            maintenance14:
              description: Vehicle shared by User 1 with User 2 and User 3
              summary: Maintenance 14
              value: 01978640-1148-74f8-be64-ba806fa103c7
            maintenance15:
              description: Vehicle owned by User 4
              summary: Maintenance 15
              value: 01978640-1149-7118-bada-9f77b4fa870a
            maintenance16:
              description: Vehicle shared by User 6 with User 7
              summary: Maintenance 16
              value: 01978640-1149-7118-bada-a16e466c1064
            maintenance17:
              description: Vehicle owned by User 8
              summary: Maintenance 17
              value: 01978640-1149-7118-bada-a7ce46886414
            maintenance18:
              description: Vehicle shared by User 1 with User 2 and User 3
              summary: Maintenance 18
              value: 01978640-1149-7118-bada-aa596985d112
          in: path
          name: uuid
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/models.MaintenanceRecordBase"
          description: OK
        "404":
          description: Not Found
      summary: Get maintenance record
      tags:
        - Maintenance
    patch:
      description: Update a maintenance record by its UUID.
      parameters:
        - description: User ID
          examples:
            user1:
              description: User has One personal vehicle and one shared vehicle
              summary: User 1
              value: 019785fe-4eb4-766e-9c45-bec7780972a2
            user2:
              description: User has vehicle shared FROM User 1 with write access
              summary: User 2
              value: 019785fe-4eb4-766e-9c45-c1f83e7c1f1f
            user3:
              description: User has vehicle shared FROM User 1 with read access
              summary: User 3
              value: 019785fe-4eb4-766e-9c45-c497f2d9fe9e
            user4:
              description: User has One personal vehicle
              summary: User 4
              value: 019785fe-4eb4-766e-9c45-c8578456b4df
          in: header
          name: auth_uuid
          required: true
          schema:
            type: string
        - description: Maintenance Record UUID
          examples:
            maintenance1:
              description:
                Maintenance record for vehicle 2, shared by User 1 with User
                2 (write access) and User 3
              summary: Maintenance Record
              value: 01978640-1148-74f8-be64-600b58c80190
          in: path
          name: uuid
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            examples:
              maintenance_record_modify:
                description: Set notes to "NEW DATA"
                summary: Modify maintenance record
                value: '{ "notes": "NEW DATA" }'
              maintenance_record_reset:
                description: Reset maintenance record to original state
                summary: Reset maintenance record
                value: '{ "notes": "Brake inspection" }'
            schema:
              $ref: "#/components/schemas/models.MaintenanceRecordBase"
        description: Maintenance record object
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/models.MaintenanceRecordBase"
          description: OK
        "403":
          description: Forbidden
        "404":
          description: Not Found
      summary: Update maintenance record
      tags:
        - Maintenance
  /user:
    get:
      description: Useful for getting the current user's information
      parameters:
        - description: User ID
          examples:
            user1:
              description: User has One personal vehicle and one shared vehicle
              summary: User 1
              value: 019785fe-4eb4-766e-9c45-bec7780972a2
            user2:
              description: User has vehicle shared FROM User 1 with write access
              summary: User 2
              value: 019785fe-4eb4-766e-9c45-c1f83e7c1f1f
            user3:
              description: User has vehicle shared FROM User 1 with read access
              summary: User 3
              value: 019785fe-4eb4-766e-9c45-c497f2d9fe9e
            user4:
              description: User has One personal vehicle
              summary: User 4
              value: 019785fe-4eb4-766e-9c45-c8578456b4df
            user5:
              description: User has no vehicles, no vehicles shared
              summary: User 5
              value: 019785fe-4eb4-766e-9c45-cec136a9ad6f
            user6:
              description: User has One vehicle to share
              summary: User 6
              value: 019785fe-4eb4-766e-9c45-f592a1187d0c
            user7:
              description:
                User has vehicle shared FROM User 1 and User 6, both with
                write access
              summary: User 7
              value: 019785fe-4eb4-766e-9c45-f9cd4ee5c0b3
            user8:
              description:
                User has One personal vehicle, vehicle shared FROM User 1
                (write) and User 6 (read)
              summary: User 8
              value: 019785fe-4eb4-766e-9c45-fc6ed4a7407b
          in: header
          name: auth_uuid
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/models.UserBase"
          description: OK
        "400":
          content:
            application/json:
              schema:
                additionalProperties:
                  type: string
                type: object
          description: Bad Request
        "404":
          content:
            application/json:
              schema:
                additionalProperties:
                  type: string
                type: object
          description: Not Found
        "422":
          content:
            application/json:
              schema:
                additionalProperties:
                  type: string
                type: object
          description: Unprocessable Entity
      summary: Get current user's record
      tags:
        - Users
    patch:
      description: Useful for modifying the user's username
      parameters:
        - description: User ID
          examples:
            user1:
              description: User has One personal vehicle and one shared vehicle
              summary: User 1
              value: 019785fe-4eb4-766e-9c45-bec7780972a2
          in: header
          name: auth_uuid
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            examples:
              user1_modify:
                description: Set username to "Modified User 1"
                summary: Modify User 1
                value: '{ "username": "Modified User 1" }'
              user1_reset:
                description: Reset User 1 to original state
                summary: Reset User 1
                value: '{ "username": "User 1" }'
            schema:
              $ref: "#/components/schemas/models.UserBase"
        description: User object
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/models.UserBase"
          description: OK
        "400":
          content:
            application/json:
              schema:
                additionalProperties:
                  type: string
                type: object
          description: Bad Request
        "404":
          content:
            application/json:
              schema:
                additionalProperties:
                  type: string
                type: object
          description: Not Found
        "422":
          content:
            application/json:
              schema:
                additionalProperties:
                  type: string
                type: object
          description: Unprocessable Entity
      summary: Modify current user's record
      tags:
        - Users
  /user/{uuid}:
    get:
      description: Useful for finding a user's username
      parameters:
        - description: User ID
          examples:
            user1:
              description: User has One personal vehicle and one shared vehicle
              summary: User 1
              value: 019785fe-4eb4-766e-9c45-bec7780972a2
            user2:
              description: User has vehicle shared FROM User 1 with write access
              summary: User 2
              value: 019785fe-4eb4-766e-9c45-c1f83e7c1f1f
            user3:
              description: User has vehicle shared FROM User 1 with read access
              summary: User 3
              value: 019785fe-4eb4-766e-9c45-c497f2d9fe9e
            user4:
              description: User has One personal vehicle
              summary: User 4
              value: 019785fe-4eb4-766e-9c45-c8578456b4df
            user5:
              description: User has no vehicles, no vehicles shared
              summary: User 5
              value: 019785fe-4eb4-766e-9c45-cec136a9ad6f
            user6:
              description: User has One vehicle to share
              summary: User 6
              value: 019785fe-4eb4-766e-9c45-f592a1187d0c
            user7:
              description:
                User has vehicle shared FROM User 1 and User 6, both with
                write access
              summary: User 7
              value: 019785fe-4eb4-766e-9c45-f9cd4ee5c0b3
            user8:
              description:
                User has One personal vehicle, vehicle shared FROM User 1
                (write) and User 6 (read)
              summary: User 8
              value: 019785fe-4eb4-766e-9c45-fc6ed4a7407b
          in: header
          name: auth_uuid
          required: true
          schema:
            type: string
        - description: User ID
          examples:
            user1:
              description: User has One personal vehicle and one shared vehicle
              summary: User 1
              value: 019785fe-4eb4-766e-9c45-bec7780972a2
            user2:
              description: User has vehicle shared FROM User 1 with write access
              summary: User 2
              value: 019785fe-4eb4-766e-9c45-c1f83e7c1f1f
            user3:
              description: User has vehicle shared FROM User 1 with read access
              summary: User 3
              value: 019785fe-4eb4-766e-9c45-c497f2d9fe9e
            user4:
              description: User has One personal vehicle
              summary: User 4
              value: 019785fe-4eb4-766e-9c45-c8578456b4df
            user5:
              description: User has no vehicles, no vehicles shared
              summary: User 5
              value: 019785fe-4eb4-766e-9c45-cec136a9ad6f
            user6:
              description: User has One vehicle to share
              summary: User 6
              value: 019785fe-4eb4-766e-9c45-f592a1187d0c
            user7:
              description:
                User has vehicle shared FROM User 1 and User 6, both with
                write access
              summary: User 7
              value: 019785fe-4eb4-766e-9c45-f9cd4ee5c0b3
            user8:
              description:
                User has One personal vehicle, vehicle shared FROM User 1
                (write) and User 6 (read)
              summary: User 8
              value: 019785fe-4eb4-766e-9c45-fc6ed4a7407b
          in: path
          name: uuid
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/models.UserBase"
          description: OK
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
      summary: Returns user record by ID
      tags:
        - Users
  /vehicle:
    get:
      description:
        Returns a list of all vehicle's locations associated with the current
        user.
      parameters:
        - description: User ID
          examples:
            user1:
              description: User has One personal vehicle and one shared vehicle
              summary: User 1
              value: 019785fe-4eb4-766e-9c45-bec7780972a2
            user2:
              description: User has vehicle shared FROM User 1 with write access
              summary: User 2
              value: 019785fe-4eb4-766e-9c45-c1f83e7c1f1f
            user3:
              description: User has vehicle shared FROM User 1 with read access
              summary: User 3
              value: 019785fe-4eb4-766e-9c45-c497f2d9fe9e
            user4:
              description: User has One personal vehicle
              summary: User 4
              value: 019785fe-4eb4-766e-9c45-c8578456b4df
            user5:
              description: User has no vehicles, no vehicles shared
              summary: User 5
              value: 019785fe-4eb4-766e-9c45-cec136a9ad6f
            user6:
              description: User has One vehicle to share
              summary: User 6
              value: 019785fe-4eb4-766e-9c45-f592a1187d0c
            user7:
              description:
                User has vehicle shared FROM User 1 and User 6, both with
                write access
              summary: User 7
              value: 019785fe-4eb4-766e-9c45-f9cd4ee5c0b3
            user8:
              description:
                User has One personal vehicle, vehicle shared FROM User 1
                (write) and User 6 (read)
              summary: User 8
              value: 019785fe-4eb4-766e-9c45-fc6ed4a7407b
          in: header
          name: auth_uuid
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  type: string
                type: array
          description: OK
      summary: Get all vehicles for the current user
      tags:
        - Vehicles
    post:
      description: Create a vehicle.
      parameters:
        - description: User ID
          examples:
            user1:
              description: User has One personal vehicle and one shared vehicle
              summary: User 1
              value: 019785fe-4eb4-766e-9c45-bec7780972a2
            user2:
              description: User has vehicle shared FROM User 1 with write access
              summary: User 2
              value: 019785fe-4eb4-766e-9c45-c1f83e7c1f1f
            user3:
              description: User has vehicle shared FROM User 1 with read access
              summary: User 3
              value: 019785fe-4eb4-766e-9c45-c497f2d9fe9e
            user4:
              description: User has One personal vehicle
              summary: User 4
              value: 019785fe-4eb4-766e-9c45-c8578456b4df
            user5:
              description: User has no vehicles, no vehicles shared
              summary: User 5
              value: 019785fe-4eb4-766e-9c45-cec136a9ad6f
            user6:
              description: User has One vehicle to share
              summary: User 6
              value: 019785fe-4eb4-766e-9c45-f592a1187d0c
            user7:
              description:
                User has vehicle shared FROM User 1 and User 6, both with
                write access
              summary: User 7
              value: 019785fe-4eb4-766e-9c45-f9cd4ee5c0b3
            user8:
              description:
                User has One personal vehicle, vehicle shared FROM User 1
                (write) and User 6 (read)
              summary: User 8
              value: 019785fe-4eb4-766e-9c45-fc6ed4a7407b
          in: header
          name: auth_uuid
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            examples:
              vehicle1:
                description: Create a new vehicle with nickname "A Fresh Vehicle"
                summary: Create a Vehicle
                value: '{ "nickname": "A Fresh Vehicle" }'
            schema:
              $ref: "#/components/schemas/models.VehicleBase"
        description: New Vehicle
        required: true
      responses:
        "201":
          description: Created
        "422":
          description: Unprocessable Entity
      summary: "Create vehicle TODO: ADD HEADER"
      tags:
        - Vehicles
  /vehicle/{uuid}:
    delete:
      description: Delete a vehicle.
      parameters:
        - description: User ID
          examples:
            user1:
              description: User has One personal vehicle and one shared vehicle
              summary: User 1
              value: 019785fe-4eb4-766e-9c45-bec7780972a2
            user2:
              description: User has vehicle shared FROM User 1 with write access
              summary: User 2
              value: 019785fe-4eb4-766e-9c45-c1f83e7c1f1f
            user3:
              description: User has vehicle shared FROM User 1 with read access
              summary: User 3
              value: 019785fe-4eb4-766e-9c45-c497f2d9fe9e
            user4:
              description: User has One personal vehicle
              summary: User 4
              value: 019785fe-4eb4-766e-9c45-c8578456b4df
            user5:
              description: User has no vehicles, no vehicles shared
              summary: User 5
              value: 019785fe-4eb4-766e-9c45-cec136a9ad6f
            user6:
              description: User has One vehicle to share
              summary: User 6
              value: 019785fe-4eb4-766e-9c45-f592a1187d0c
            user7:
              description:
                User has vehicle shared FROM User 1 and User 6, both with
                write access
              summary: User 7
              value: 019785fe-4eb4-766e-9c45-f9cd4ee5c0b3
            user8:
              description:
                User has One personal vehicle, vehicle shared FROM User 1
                (write) and User 6 (read)
              summary: User 8
              value: 019785fe-4eb4-766e-9c45-fc6ed4a7407b
          in: header
          name: auth_uuid
          required: true
          schema:
            type: string
        - description: Vehicle UUID
          in: path
          name: uuid
          required: true
          schema:
            type: string
      responses:
        "204":
          description: No Content
        "403":
          description: Forbidden
        "404":
          description: Not Found
      summary: Delete vehicle
      tags:
        - Vehicles
    get:
      description: Retrieves a vehicle by its UUID.
      parameters:
        - description: User ID
          examples:
            user1:
              description: User has One personal vehicle and one shared vehicle
              summary: User 1
              value: 019785fe-4eb4-766e-9c45-bec7780972a2
            user2:
              description: User has vehicle shared FROM User 1 with write access
              summary: User 2
              value: 019785fe-4eb4-766e-9c45-c1f83e7c1f1f
            user3:
              description: User has vehicle shared FROM User 1 with read access
              summary: User 3
              value: 019785fe-4eb4-766e-9c45-c497f2d9fe9e
            user4:
              description: User has One personal vehicle
              summary: User 4
              value: 019785fe-4eb4-766e-9c45-c8578456b4df
            user5:
              description: User has no vehicles, no vehicles shared
              summary: User 5
              value: 019785fe-4eb4-766e-9c45-cec136a9ad6f
            user6:
              description: User has One vehicle to share
              summary: User 6
              value: 019785fe-4eb4-766e-9c45-f592a1187d0c
            user7:
              description:
                User has vehicle shared FROM User 1 and User 6, both with
                write access
              summary: User 7
              value: 019785fe-4eb4-766e-9c45-f9cd4ee5c0b3
            user8:
              description:
                User has One personal vehicle, vehicle shared FROM User 1
                (write) and User 6 (read)
              summary: User 8
              value: 019785fe-4eb4-766e-9c45-fc6ed4a7407b
          in: header
          name: auth_uuid
          required: true
          schema:
            type: string
        - description: Vehicle UUID
          examples:
            vehicle1:
              description: Vehicle owned by User 1
              summary: Vehicle 1
              value: 019785fe-4eb4-766e-9c45-d0b2bb289b82
            vehicle2:
              description: Vehicle shared by User 1 with User 2
              summary: Vehicle 2
              value: 019785fe-4eb4-766e-9c45-d77f41aa8317
            vehicle3:
              description: Vehicle owned by User 4
              summary: Vehicle 3
              value: 019785fe-4eb4-766e-9c45-d9cc7ea628c1
            vehicle4:
              description: Vehicle shared by User 6 with User 7
              summary: Vehicle 4
              value: 019785fe-4eb4-766e-9c45-ddfb4b2e7210
            vehicle5:
              description: Vehicle owned by User 8
              summary: Vehicle 5
              value: 019785fe-4eb4-766e-9c45-e1af5010246b
          in: path
          name: uuid
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/models.VehicleBase"
          description: OK
        "404":
          description: Not Found
      summary: Get vehicle
      tags:
        - Vehicles
    patch:
      description: Update a vehicle by its UUID.
      parameters:
        - description: User ID
          examples:
            user1:
              description: User has One personal vehicle and one shared vehicle
              summary: User 1
              value: 019785fe-4eb4-766e-9c45-bec7780972a2
            user2:
              description: User has vehicle shared FROM User 1 with write access
              summary: User 2
              value: 019785fe-4eb4-766e-9c45-c1f83e7c1f1f
            user3:
              description: User has vehicle shared FROM User 1 with read access
              summary: User 3
              value: 019785fe-4eb4-766e-9c45-c497f2d9fe9e
            user4:
              description: User has One personal vehicle
              summary: User 4
              value: 019785fe-4eb4-766e-9c45-c8578456b4df
          in: header
          name: auth_uuid
          required: true
          schema:
            type: string
        - description: Vehicle UUID
          examples:
            vehicle2:
              description:
                Vehicle shared by User 1 with User 2 (write access) and User
                3
              summary: Vehicle 2
              value: 019785fe-4eb4-766e-9c45-d77f41aa8317
          in: path
          name: uuid
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            examples:
              vehicle_modify:
                description: Set nickname to "Modified Vehicle 2"
                summary: Modify vehicle
                value: '{ "nickname": "Modified Vehicle 2" }'
              vehicle_reset:
                description: Reset vehicle to original state
                summary: Reset Vehicle
                value: '{ "Nickname": "Vehicle 2" }'
            schema:
              $ref: "#/components/schemas/models.VehicleBase"
        description: Vehicle object
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/models.VehicleBase"
          description: OK
        "403":
          description: Forbidden
        "404":
          description: Not Found
      summary: Update vehicle
      tags:
        - Vehicles
  /vehicle/{uuid}/maintenance:
    get:
      description: Retrieves all maintenance locations for a vehicle
      parameters:
        - description: User ID
          examples:
            user1:
              description: User has One personal vehicle and one shared vehicle
              summary: User 1
              value: 019785fe-4eb4-766e-9c45-bec7780972a2
            user2:
              description: User has vehicle shared FROM User 1 with write access
              summary: User 2
              value: 019785fe-4eb4-766e-9c45-c1f83e7c1f1f
            user3:
              description: User has vehicle shared FROM User 1 with read access
              summary: User 3
              value: 019785fe-4eb4-766e-9c45-c497f2d9fe9e
            user4:
              description: User has One personal vehicle
              summary: User 4
              value: 019785fe-4eb4-766e-9c45-c8578456b4df
            user5:
              description: User has no vehicles, no vehicles shared
              summary: User 5
              value: 019785fe-4eb4-766e-9c45-cec136a9ad6f
            user6:
              description: User has One vehicle to share
              summary: User 6
              value: 019785fe-4eb4-766e-9c45-f592a1187d0c
            user7:
              description:
                User has vehicle shared FROM User 1 and User 6, both with
                write access
              summary: User 7
              value: 019785fe-4eb4-766e-9c45-f9cd4ee5c0b3
            user8:
              description:
                User has One personal vehicle, vehicle shared FROM User 1
                (write) and User 6 (read)
              summary: User 8
              value: 019785fe-4eb4-766e-9c45-fc6ed4a7407b
          in: header
          name: auth_uuid
          required: true
          schema:
            type: string
        - description: Vehicle UUID
          examples:
            vehicle1:
              description: Vehicle owned by User 1
              summary: Vehicle 1
              value: 019785fe-4eb4-766e-9c45-d0b2bb289b82
            vehicle2:
              description: Vehicle shared by User 1 with User 2
              summary: Vehicle 2
              value: 019785fe-4eb4-766e-9c45-d77f41aa8317
            vehicle3:
              description: Vehicle owned by User 4
              summary: Vehicle 3
              value: 019785fe-4eb4-766e-9c45-d9cc7ea628c1
            vehicle4:
              description: Vehicle shared by User 6 with User 7
              summary: Vehicle 4
              value: 019785fe-4eb4-766e-9c45-ddfb4b2e7210
            vehicle5:
              description: Vehicle owned by User 8
              summary: Vehicle 5
              value: 019785fe-4eb4-766e-9c45-e1af5010246b
          in: path
          name: uuid
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  type: string
                type: array
          description: OK
        "404":
          description: Not Found
      summary: Get maintenance
      tags:
        - Maintenance
servers:
  - description: Local development server
    url: http://localhost:8080/
  - description: Production server
    url: https://api.automyself.com/v1/
